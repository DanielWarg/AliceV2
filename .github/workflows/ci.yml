name: CI

on:
  push:
    branches: [ main, master, develop, feat/** ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  lint-and-typecheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install linters
        run: |
          python -m pip install --upgrade pip
          pip install ruff black mypy bandit
      - name: Ruff (lint)
        run: ruff check .
      - name: Black (format check)
        run: black --check .
      - name: Mypy (type check, lenient)
        run: mypy --ignore-missing-imports --install-types --non-interactive services || true
      - name: Bandit (security scan)
        run: bandit -q -r services || true

  tests-guardian:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install guardian deps
        working-directory: services/guardian
        run: |
          python -m pip install --upgrade pip
          pip install -r pyproject.toml || true
          pip install . || true
          pip install pytest
      - name: Run guardian tests (if present)
        working-directory: services/guardian
        run: |
          if [ -d "src/tests" ]; then pytest -q src/tests || true; else echo "No guardian tests"; fi
name: ci
on: [push]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        cd services/orchestrator
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Start services
      run: |
        docker compose up -d guardian orchestrator
        sleep 10
    
    - name: Warm status
      run: |
        for i in {1..10}; do 
          curl -s localhost:8000/health && break || sleep 2
        done
    
    - name: Smoke + SLO snapshot
      run: |
        # Make test requests
        curl -s -X POST localhost:8000/api/orchestrator/ingest \
          -H 'Content-Type: application/json' \
          -d '{"v":"1","session_id":"ci","text":"Hej Alice, vad är klockan?"}' >/dev/null
        
        curl -s -X POST localhost:8000/api/orchestrator/chat \
          -H 'Content-Type: application/json' \
          -d '{"v":"1","session_id":"ci","message":"Hej Alice, vad är klockan?"}' >/dev/null
        
        sleep 2
        
        # Get metrics
        curl -s localhost:8000/api/status/routes > routes.json
        cat routes.json
    
    - name: Enforce SLO (fast<=250, planner<=1500, deep<=3000)
      run: |
        node -e '
          const s=require("./routes.json").raw||{};
          const ok=(r,lim)=>!s[r]||!s[r].p95_ms||s[r].p95_ms<=lim;
          if(!(ok("micro",250)&&ok("planner",1500)&&ok("deep",3000))){
            console.error("SLO violation detected!");
            console.error("Current P95 values:", s);
            process.exit(1);
          }
          console.log("✅ SLO check passed");
        '
    
    - name: Check Guardian health
      run: |
        guardian_health=$(curl -s localhost:8787/health | jq -r '.state')
        if [ "$guardian_health" != "NORMAL" ]; then
          echo "❌ Guardian not in NORMAL state: $guardian_health"
          exit 1
        fi
        echo "✅ Guardian health check passed"
    
    - name: Run integration tests
      run: |
        cd services/orchestrator
        python -m pytest src/tests/ -v --tb=short
    
    - name: Cleanup
      if: always()
      run: |
        docker compose down
