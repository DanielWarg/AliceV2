#!/bin/bash
# üî• Backend Startup Stresstest - S√§kerst√§ller att systemet startar VARJE g√•ng
# K√∂r make down/up i loop och verifierar att alla tj√§nster fungerar

set -e

ITERATIONS=${1:-10}  # Default 10 g√•nger, eller anv√§nd argument
FAILED=0
PASSED=0

echo "üî• STRESSTEST: Testar backend startup $ITERATIONS g√•nger"
echo "=================================="

for i in $(seq 1 $ITERATIONS); do
    echo ""
    echo "üöÄ ITERATION $i/$ITERATIONS"
    echo "------------------------"
    
    # St√§ng ner allt
    echo "‚¨áÔ∏è  St√§nger ner..."
    make down > /dev/null 2>&1 || true
    
    # V√§nta lite f√∂r att s√§kerst√§lla cleanup
    sleep 2
    
    # Starta upp
    echo "‚¨ÜÔ∏è  Startar upp..."
    if ! make up > /dev/null 2>&1; then
        echo "‚ùå FAILED: make up misslyckades iteration $i"
        ((FAILED++))
        continue
    fi
    
    # V√§nta p√• att servicerna ska starta
    echo "‚è≥ V√§ntar p√• tj√§nster..."
    sleep 10
    
    # Testa alla kritiska tj√§nster
    echo "üîç Testar tj√§nster..."
    
    # Test 1: API funktionalitet
    if curl -m 5 http://localhost:8001/api/orchestrator/chat \
        -H 'Content-Type: application/json' \
        -d '{"message":"stresstest","session_id":"test'$i'"}' \
        > /dev/null 2>&1; then
        echo "  ‚úÖ Alice API (8001) - OK"
    else
        echo "  ‚ùå Alice API (8001) - FAIL"
        ((FAILED++))
        continue
    fi
    
    # Test 2: Guardian
    if curl -m 3 http://localhost:8787/health > /dev/null 2>&1; then
        echo "  ‚úÖ Guardian (8787) - OK"
    else
        echo "  ‚ùå Guardian (8787) - FAIL"
        ((FAILED++))
        continue
    fi
    
    # Test 3: NLU
    if curl -m 3 http://localhost:9002/health > /dev/null 2>&1; then
        echo "  ‚úÖ NLU (9002) - OK"
    else
        echo "  ‚ùå NLU (9002) - FAIL"
        ((FAILED++))
        continue
    fi
    
    # Test 4: Redis
    if redis-cli -p 6379 ping > /dev/null 2>&1; then
        echo "  ‚úÖ Redis (6379) - OK"
    else
        echo "  ‚ùå Redis (6379) - FAIL"
        ((FAILED++))
        continue
    fi
    
    # Test 5: Dev-proxy p√• nya porten
    if curl -m 3 http://localhost:19000 > /dev/null 2>&1; then
        echo "  ‚úÖ Dev-proxy (19000) - OK"
    else
        echo "  ‚ö†Ô∏è  Dev-proxy (19000) - WARNING (kan vara OK om orchestrator har problem)"
    fi
    
    echo "  üéâ ITERATION $i - PASSED"
    ((PASSED++))
done

# Slutresultat
echo ""
echo "üèÅ STRESSTEST RESULTAT"
echo "======================"
echo "‚úÖ PASSED: $PASSED/$ITERATIONS"
echo "‚ùå FAILED: $FAILED/$ITERATIONS"

if [ $FAILED -eq 0 ]; then
    echo "üéä PERFEKT! Alla $ITERATIONS iterationer lyckades!"
    echo "Backend √§r stabil och p√•litlig f√∂r produktion."
else
    echo "‚ö†Ô∏è  VARNING: $FAILED/$ITERATIONS iterationer misslyckades"
    echo "Backend beh√∂ver stabiliseras innan Fibonacci-test."
    exit 1
fi