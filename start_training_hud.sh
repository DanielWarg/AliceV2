#!/bin/bash

# üßÆ Alice v2 Training HUD - Quick Start Script
# 
# Detta script startar Training HUD med pre-konfigurerade inst√§llningar
# och f√∂rbereder systemet f√∂r tr√§ningsmonitoring.

set -euo pipefail

echo "üßÆ Alice v2 Training HUD - Startar..."

# Kontrollera att vi √§r i r√§tt directory
if [ ! -f "training_hud.py" ]; then
    echo "‚ùå Fel: training_hud.py inte funnen. K√∂r fr√•n alice-v2 root directory."
    exit 1
fi

# Kontrollera virtual environment
if [ ! -d ".venv" ]; then
    echo "‚ùå Fel: .venv inte funnen. K√∂r 'python -m venv .venv' f√∂rst."
    exit 1
fi

# Aktivera venv och kontrollera dependencies
echo "üì¶ Kontrollerar dependencies..."
source .venv/bin/activate

# Installera Rich om det inte finns
if ! python -c "import rich" 2>/dev/null; then
    echo "üì¶ Installerar Rich f√∂r beautiful terminal UI..."
    pip install rich
fi

# Kontrollera att Docker services k√∂rs (beh√∂vs f√∂r tr√§ningar)
echo "üê≥ Kontrollerar Docker services..."
if ! docker ps >/dev/null 2>&1; then
    echo "‚ùå Docker k√∂rs inte. Starta Docker f√∂rst."
    exit 1
fi

# Kontrollera att Alice services k√∂rs
if ! docker ps | grep -q alice-orchestrator; then
    echo "üöÄ Alice services k√∂rs inte. Startar grundl√§ggande services..."
    make up
    
    # Starta dev-proxy f√∂r port 18000 (enligt AGENTS.md fix)
    echo "üåê Startar dev-proxy f√∂r port 18000..."
    docker compose up -d dev-proxy
    
    echo "‚è≥ V√§ntar p√• att services ska bli klara..."
    sleep 5
fi

# Kontrollera att port 18000 fungerar
echo "üîç Kontrollerar att Alice API √§r tillg√§nglig p√• port 18000..."
if ! curl -s http://localhost:18000/health >/dev/null; then
    echo "‚ö†Ô∏è Port 18000 svarar inte. Startar dev-proxy..."
    docker compose up -d dev-proxy
    sleep 3
    
    if ! curl -s http://localhost:18000/health >/dev/null; then
        echo "‚ùå Alice API inte tillg√§nglig. Kontrollera att 'make up' fungerar."
        echo "üí° Tips: K√∂r 'docker compose up -d dev-proxy' manuellt"
        exit 1
    fi
fi

echo "‚úÖ System ready! Alice API svarar p√• http://localhost:18000"

# Visa snabba instruktioner
echo ""
echo "üéØ Training HUD Quick Start:"
echo "   V√§lj ett alternativ nedan..."
echo ""

# Interaktiv meny
echo "1) üßÆ Starta bara HUD (manuell tr√§ningsstart)"
echo "2) üöÄ Auto-starta Fibonacci training + HUD"  
echo "3) ü§ñ Auto-starta RL pipeline + HUD"
echo "4) ‚ö° Auto-starta alla tr√§ningar + HUD"
echo "5) üìö Visa full dokumentation f√∂rst"
echo ""

read -p "V√§lj (1-5): " choice

case $choice in
    1)
        echo "üßÆ Startar Training HUD..."
        python training_hud.py
        ;;
    2)
        echo "üßÆ Auto-startar Fibonacci training..."
        python training_hud.py --auto-start fibonacci
        ;;
    3)
        echo "ü§ñ Auto-startar RL pipeline..."
        python training_hud.py --auto-start rl_pipeline
        ;;
    4)
        echo "‚ö° Auto-startar alla tr√§ningar..."
        python training_hud.py --auto-start fibonacci,rl_pipeline,cache_bandit
        ;;
    5)
        echo "üìö Visar dokumentation..."
        if command -v less >/dev/null; then
            less TRAINING_HUD.md
        else
            cat TRAINING_HUD.md
        fi
        echo ""
        echo "üßÆ Startar HUD efter dokumentation..."
        python training_hud.py
        ;;
    *)
        echo "‚ùå Ogiltigt val. Startar standard HUD..."
        python training_hud.py
        ;;
esac